{"version":3,"sources":["redux/contacts/contacts-reducers.js","redux/auth/auth-reducer.js","redux/store.js","components/Container/Container.jsx","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","components/PageHeader/Navigation.jsx","components/UserMenu/UserMenu.jsx","components/PageHeader/AuthNav.jsx","components/PageHeader/AppBar.jsx","components/PageFooter/PageFooter.jsx","App.js","index.js","redux/auth/auth-selectors.js","redux/auth/auth-operation.js","redux/auth/auth-actions.js","components/Button/Button.jsx","components/Button/index.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js"],"names":["initialState","items","filter","isLoading","error","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","id","updateContactSuccess","forEach","contact","changeFilter","updateContactRequest","updateContactError","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","removeError","combineReducers","name","email","user","authActions","registrationSuccess","signInSuccess","signOutSuccess","getCurrentUserSuccess","token","isAuthLoading","registrationRequest","registrationError","signInRequest","signInError","signOutRequest","signOutError","getCurrentUserRequest","getCurrentUserError","setError","isSignedIn","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactReducer","devTools","process","persistor","persistStore","Container","children","CssBaseline","PrivateRoute","redirectTo","routeProps","isSignIn","useSelector","authSelectors","getIsSignIn","to","PublicRoute","restricted","shouldRedirect","style","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","exact","activeStyle","container","alignItems","marginRight","UserMenu","dispath","useDispatch","getUsername","Button","type","onClick","authOperations","signOut","value","fontSize","AuthNav","header","justifyContent","borderBottom","AppBar","useStyles","makeStyles","theme","appBar","top","bottom","PageFooter","className","Toolbar","HomePageView","lazy","RegistrationView","LoginFormView","PhoneContactsView","createMuiTheme","palette","primary","main","secondary","App","dispatch","useEffect","contactOperations","fetchContacts","fetchCurrentUser","ThemeProvider","fallback","path","reddirectTo","ReactDOM","render","StrictMode","loading","document","getElementById","getUserEmail","getToken","getIsAuthLoading","getErrorMessage","axios","defaults","baseURL","headers","common","Authorization","registration","contactObj","a","post","data","message","signIn","credentials","getState","persistedToken","get","createAction","props","resetError","setTimeout","addContact","deleteContact","delete","updateContact","number","patch"],"mappings":"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","file":"static/js/main.aa9ead86.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  updateContactRequest,\r\n  updateContactSuccess,\r\n  updateContactError,\r\n  removeError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: '',\r\n    isLoading: false,\r\n    error: '',\r\n  },\r\n};\r\n\r\nconst items = createReducer(initialState.contacts.items, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n  [updateContactSuccess]: (state, { payload }) =>\r\n    state.forEach(contact => (contact.id === payload.id ? payload : contact)),\r\n});\r\n\r\nconst filter = createReducer(initialState.contacts.filter, {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(initialState.contacts.isLoading, {\r\n  [updateContactRequest]: () => true,\r\n  [updateContactSuccess]: () => false,\r\n  [updateContactError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(initialState.contacts.error, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n  [updateContactError]: (_, { payload }) => payload,\r\n  [removeError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter, isLoading, error });\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isSignedIn: false,\r\n  error: null,\r\n  isAuthLoading: false,\r\n};\r\n\r\nconst user = createReducer(initialState.user, {\r\n  [authActions.registrationSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.signInSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.signOutSuccess]: () => initialState.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(initialState.token, {\r\n  [authActions.registrationSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.signInSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.signOutSuccess]: () => null,\r\n});\r\n\r\nconst isAuthLoading = createReducer(initialState.isAuthLoading, {\r\n  [authActions.registrationRequest]: () => true,\r\n  [authActions.registrationSuccess]: () => false,\r\n  [authActions.registrationError]: () => false,\r\n  [authActions.signInRequest]: () => true,\r\n  [authActions.signInSuccess]: () => false,\r\n  [authActions.signInError]: () => false,\r\n  [authActions.signOutRequest]: () => true,\r\n  [authActions.signOutSuccess]: () => false,\r\n  [authActions.signOutError]: () => false,\r\n  [authActions.getCurrentUserRequest]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(initialState.error, {\r\n  [authActions.registrationError]: setError,\r\n  [authActions.signInError]: setError,\r\n  [authActions.signOutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isSignedIn = createReducer(initialState.isSignedIn, {\r\n  [authActions.registrationSuccess]: () => true,\r\n  [authActions.signInSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registrationError]: () => false,\r\n  [authActions.signInError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.signOutSuccess]: () => false,\r\n});\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  isSignedIn,\r\n  error,\r\n  isAuthLoading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts/contacts-reducers';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { CssBaseline } from '@material-ui/core';\r\n\r\nconst Container = ({ children }) => {\r\n  return (\r\n    <div>\r\n      {children}\r\n      <CssBaseline />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isSignIn = useSelector(authSelectors.getIsSignIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isSignIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nconst PublicRoute = ({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsSignIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nconst style = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 600,\r\n    color: 'green',\r\n  },\r\n  activeLink: {\r\n    color: 'red',\r\n  },\r\n};\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={style.link} activeStyle={style.activeLink}>\r\n        Home\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        style={style.link}\r\n        activeStyle={style.activeLink}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authOperations from '../../redux/auth/auth-operation';\r\nimport Button from '../Button';\r\n\r\nconst style = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = () => {\r\n  const dispath = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n  return (\r\n    <div style={style.container}>\r\n      <span style={style.name}>Welcome, {name} </span>\r\n      <Button\r\n        type=\"button\"\r\n        onClick={() => dispath(authOperations.signOut())}\r\n        value=\"Sign Out\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nconst style = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 600,\r\n    color: 'green',\r\n  },\r\n  activeLink: {\r\n    color: 'red',\r\n    fontSize: '24px',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        style={style.link}\r\n        activeStyle={style.activeLink}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        style={style.link}\r\n        activeStyle={style.activeLink}\r\n      >\r\n        Sign In\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nconst style = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid red',\r\n  },\r\n};\r\n\r\nconst AppBar = () => {\r\n  const isSignIn = useSelector(authSelectors.getIsSignIn);\r\n  return (\r\n    <header style={style.header}>\r\n      <Navigation />\r\n      {isSignIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n}));\r\n\r\nconst PageFooter = () => {\r\n  const style = useStyles();\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <AppBar color=\"primary\" className={style.appBar}>\r\n        <Toolbar />\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageFooter;\r\n","// import { ToastContainer } from 'react-toastify';\nimport { Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, Suspense, lazy } from 'react';\nimport Container from './components/Container';\nimport PrivateRoute from './components/Routes/PrivateRoute';\nimport PublicRoute from './components/Routes/PublicRoute';\nimport authOperations from './redux/auth/auth-operation';\nimport AppBar from './components/PageHeader/AppBar';\nimport BottomAppBar from './components/PageFooter/PageFooter';\nimport contactOperations from './redux/contacts/contacts-operations';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\n// import { css } from '@emotion/core';\n// import ClockLoader from 'react-spinners/ClockLoader';\n\nconst HomePageView = lazy(() => import('./views/HomePageView'));\nconst RegistrationView = lazy(() => import('./views/RegistrationView'));\nconst LoginFormView = lazy(() => import('./views/LoginFormView'));\nconst PhoneContactsView = lazy(() => import('./views/PhoneContactsView'));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#011211',\n    },\n    secondary: {\n      main: '#faa346',\n    },\n  },\n});\n\n// const override = css`\n//   display: block;\n//   margin: 50px auto;\n//   border-color: red;\n// `;\n\nexport default function App() {\n  // const [showModal, setShowModal] = useState(false);\n  // const contacts = useSelector(getContacts);\n  // const visibleContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  // const isCurrentUserFething = useSelector(authSelectors.);\n\n  // const togleModal = () => setShowModal(!showModal);\n\n  useEffect(() => {\n    dispatch(\n      contactOperations.fetchContacts(authOperations.fetchCurrentUser()),\n    );\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ThemeProvider theme={theme}>\n        <AppBar />\n        {/* <RegistrationView /> */}\n        <Switch>\n          <Suspense fallback={<h2>Loading....</h2>}>\n            <PublicRoute exact path=\"/\">\n              <HomePageView />\n            </PublicRoute>\n\n            <PublicRoute path=\"/register\" reddirectTo=\"/\">\n              <RegistrationView />\n            </PublicRoute>\n\n            <PublicRoute path=\"/login\" reddirectTo=\"/\">\n              <LoginFormView />\n            </PublicRoute>\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <PhoneContactsView />\n            </PrivateRoute>\n          </Suspense>\n        </Switch>\n        <BottomAppBar />\n      </ThemeProvider>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { persistor, store } from './redux/store';\nimport App from './App';\nimport './base.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","const getIsSignIn = state => state.auth.isSignedIn;\r\nconst getUsername = state => state.auth.user.name;\r\nconst getUserEmail = state => state.auth.user.email;\r\nconst getToken = state => state.auth.token;\r\nconst getIsAuthLoading = state => state.auth.isAuthLoading;\r\nconst getErrorMessage = state => state.auth.error;\r\n\r\nconst authSelectors = {\r\n  getIsSignIn,\r\n  getUsername,\r\n  getUserEmail,\r\n  getToken,\r\n  getIsAuthLoading,\r\n  getErrorMessage,\r\n};\r\n\r\nexport default authSelectors;\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\nconst BASE_URL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst registration = contactObj => async dispatch => {\r\n  dispatch(authActions.registrationRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/signup', contactObj);\r\n    token.set(data.token);\r\n    dispatch(authActions.registrationSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.registrationError(error.message));\r\n  }\r\n};\r\n\r\nconst signIn = credentials => async dispatch => {\r\n  dispatch(authActions.signInRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    dispatch(authActions.signInSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.signInError(error.message));\r\n  }\r\n};\r\n\r\nconst signOut = () => async dispatch => {\r\n  dispatch(authActions.signOutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.signOutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.signOutError(error.message));\r\n  }\r\n};\r\n\r\nconst fetchCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  try {\r\n    const { data } = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nconst authOperations = { registration, signIn, signOut, fetchCurrentUser };\r\n\r\nexport default authOperations;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registrationRequest = createAction('auth/registretionRequest');\r\nconst registrationSuccess = createAction('auth/registretionSuccess');\r\nconst registrationError = createAction('auth/registretionError');\r\n\r\nconst signInRequest = createAction('auth/signInRequest');\r\nconst signInSuccess = createAction('auth/signInSuccess');\r\nconst signInError = createAction('auth/signInError');\r\n\r\nconst signOutRequest = createAction('auth/signOutRequest');\r\nconst signOutSuccess = createAction('auth/signOutSuccess');\r\nconst signOutError = createAction('auth/signOutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst authActions = {\r\n  registrationRequest,\r\n  registrationSuccess,\r\n  registrationError,\r\n  signInRequest,\r\n  signInSuccess,\r\n  signInError,\r\n  signOutRequest,\r\n  signOutSuccess,\r\n  signOutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n\r\nexport default authActions;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ value, ...props }) => {\r\n  return <button {...props}>{value}</button>;\r\n};\r\nButton.propTypes = {\r\n  onclick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  value: PropTypes.string,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","export { default } from './Button';\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  updateContactRequest,\r\n  updateContactSuccess,\r\n  updateContactError,\r\n  removeError,\r\n} from './contacts-actions';\r\n\r\nconst resetError = dispatch =>\r\n  setTimeout(() => dispatch(removeError(null)), 2500);\r\n\r\nconst BASE_URL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    return dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n    resetError(dispatch);\r\n  }\r\n};\r\nconst addContact = contactObj => async dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contactObj);\r\n    return dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n    resetError(dispatch);\r\n  }\r\n};\r\n\r\nconst updateContact = contactObj => async dispatch => {\r\n  dispatch(updateContactRequest());\r\n  const { id, name, number } = contactObj;\r\n  try {\r\n    const { data } = await axios.patch(`/contacts/${id}`, { name, number });\r\n    return dispatch(updateContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(updateContactError(error.message));\r\n    resetError(dispatch);\r\n  }\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    return dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n    resetError(dispatch);\r\n  }\r\n};\r\n\r\nconst contactOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n  updateContact,\r\n};\r\n\r\nexport default contactOperations;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\n\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\n\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\n\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\n\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const updateContactRequest = createAction(\r\n  'contacts/updateContactRequest',\r\n);\r\nexport const updateContactSuccess = createAction(\r\n  'contacts/updateContactSuccess',\r\n);\r\nexport const updateContactError = createAction('contacts/updateContactError');\r\n\r\nexport const removeError = createAction('contacts/removeError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n"],"sourceRoot":""}