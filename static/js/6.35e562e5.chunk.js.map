{"version":3,"sources":["views/img-view-bg/reg-log-bg.jpg","views/RegistrationView.jsx"],"names":["schema","yup","name","required","email","password","min","useStyles","createUseStyles","container","position","height","backgroundSize","backgroundRepeat","color","form","top","right","padding","width","fontSize","display","flexDirection","backgroundColor","borderRadius","opacity","backdropFilter","border","btn","fontWeight","RegistrationView","dispatch","useDispatch","st","className","style","backgroundImage","authImg","initialValues","validationSchema","onSubmit","contactObj","resetForm","setSubmitting","authOperations","registration","component","TextField","type","label","variant","margin","value"],"mappings":"gJAAe,QAA0B,wC,iCCAzC,8FAUMA,EAASC,IAAW,CACxBC,KAAMD,MAAaE,SAAS,2BAC5BC,MAAOH,MAAaG,QAAQD,SAAS,2BACrCE,SAAUJ,MAEPK,IAAI,EAAG,+CACPH,SAAS,gCAGRI,EAAYC,YAAgB,CAChCC,UAAW,CACTC,SAAU,WACVC,OAAQ,IACRC,eAAgB,QAChBC,iBAAkB,YAClBC,MAAO,SAETC,KAAM,CACJL,SAAU,WACVM,IAAK,GACLC,MAAO,GACPC,QAAS,EACTC,MAAO,IACPR,OAAQ,IACRS,SAAU,GACVC,QAAS,OACTC,cAAe,SACfC,gBAAiB,UACjBC,aAAc,EACdC,QAAS,GACTC,eAAgB,cAChBC,OAAQ,qBAEVC,IAAK,CACHL,gBAAiB,UACjBT,MAAO,OACPI,QAAS,EACTM,aAAc,EACdK,WAAY,IACZ,UAAW,CACTf,MAAO,UACPS,gBAAiB,OACjBI,OAAQ,oBACRE,WAAY,QAmEHC,UA9DU,WACvB,IAAMC,EAAWC,cACXC,EAAK1B,IAgBX,OACE,cAAC,IAAD,CACE2B,UAAWD,EAAGxB,UACd0B,MAAO,CACLC,gBAAgB,OAAD,OAASC,IAAT,MAHnB,SAME,cAAC,IAAD,CACEC,cAnBgB,CAAEpC,KAAM,GAAIE,MAAO,GAAIC,SAAU,IAoBjDkC,iBAAkBvC,EAClBwC,SAnBe,SAAC,EAAD,GAGf,IARsBC,EAMxBvC,EAEC,EAFDA,KAAME,EAEL,EAFKA,MAAOC,EAEZ,EAFYA,SACbqC,EACC,EADDA,UAAWC,EACV,EADUA,cAPaF,EASN,CAAEvC,OAAME,QAAOC,YARnC0B,EAASa,IAAeC,aAAaJ,IASrCE,GAAc,GACdD,KAUE,SAKE,eAAC,IAAD,CAAMR,UAAWD,EAAGlB,KAApB,UACE,cAAC,IAAD,CACE+B,UAAWC,IACXC,KAAK,OACL9C,KAAK,OACL+C,MAAM,QACNC,QAAQ,WACRC,OAAO,UAET,cAAC,IAAD,CACEL,UAAWC,IACXC,KAAK,QACL9C,KAAK,QACL+C,MAAM,QACNC,QAAQ,WACRC,OAAO,UAET,cAAC,IAAD,CACEL,UAAWC,IACXC,KAAK,OACL9C,KAAK,WACL+C,MAAM,WACNC,QAAQ,WACRC,OAAO,UAET,cAAC,IAAD,CAAQjB,UAAWD,EAAGL,IAAKwB,MAAM,WAAWJ,KAAK","file":"static/js/6.35e562e5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/reg-log-bg.a5008e68.jpg\";","import { Formik, Form, Field } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operation';\r\nimport Button from '../components/Button/Button';\r\nimport * as yup from 'yup';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { TextField } from 'formik-material-ui';\r\nimport authImg from './img-view-bg/reg-log-bg.jpg';\r\nimport Container from '../components/Container';\r\n\r\nconst schema = yup.object({\r\n  name: yup.string().required('Login field is required'),\r\n  email: yup.string().email().required('Email field is required'),\r\n  password: yup\r\n    .string()\r\n    .min(8, 'Password must be at least 8 characters long')\r\n    .required('Password field is required'),\r\n});\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    position: 'relative',\r\n    height: 700,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    color: 'black',\r\n  },\r\n  form: {\r\n    position: 'absolute',\r\n    top: 20,\r\n    right: 20,\r\n    padding: 8,\r\n    width: 300,\r\n    height: 210,\r\n    fontSize: 16,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: 7,\r\n    opacity: 0.8,\r\n    backdropFilter: 'blur(100px)',\r\n    border: '1px solid #A52A2A',\r\n  },\r\n  btn: {\r\n    backgroundColor: '#A52A2A',\r\n    color: '#fff',\r\n    padding: 4,\r\n    borderRadius: 7,\r\n    fontWeight: 500,\r\n    '&:hover': {\r\n      color: '#A52A2A',\r\n      backgroundColor: '#fff',\r\n      border: '1px solid #A52A2A',\r\n      fontWeight: 800,\r\n    },\r\n  },\r\n});\r\n\r\nconst RegistrationView = () => {\r\n  const dispatch = useDispatch();\r\n  const st = useStyles();\r\n\r\n  const handleRegisterClick = contactObj =>\r\n    dispatch(authOperations.registration(contactObj));\r\n\r\n  const initialValues = { name: '', email: '', password: '' };\r\n\r\n  const handleSubmit = (\r\n    { name, email, password },\r\n    { resetForm, setSubmitting },\r\n  ) => {\r\n    handleRegisterClick({ name, email, password });\r\n    setSubmitting(false);\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className={st.container}\r\n      style={{\r\n        backgroundImage: `url(${authImg})`,\r\n      }}\r\n    >\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={schema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Form className={st.form}>\r\n          <Field\r\n            component={TextField}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            label=\"Login\"\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n          />\r\n          <Field\r\n            component={TextField}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n          />\r\n          <Field\r\n            component={TextField}\r\n            type=\"text\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n          />\r\n          <Button className={st.btn} value=\"Register\" type=\"submit\" />\r\n        </Form>\r\n      </Formik>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegistrationView;\r\n"],"sourceRoot":""}