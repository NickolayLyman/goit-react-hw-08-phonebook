{"version":3,"sources":["redux/contacts/contacts-reducers.js","redux/auth/auth-reducer.js","redux/store.js","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","components/PageHeader/Navigation.jsx","components/PageHeader/UserMenu.jsx","components/PageHeader/AuthNav.jsx","components/PageHeader/AppBar.jsx","App.js","index.js","redux/contacts/contacts-actions.js","redux/auth/auth-selectors.js","redux/auth/auth-operation.js","redux/auth/auth-actions.js","components/Button/index.js","components/Button/Button.jsx","components/Container/Container.jsx"],"names":["initialState","items","filter","isLoading","error","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","id","changeFilter","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","combineReducers","name","email","user","authActions","registrationSuccess","signInSuccess","signOutSuccess","getCurrentUserSuccess","token","isAuthLoading","registrationRequest","registrationError","signInRequest","signInError","signOutRequest","signOutError","getCurrentUserRequest","getCurrentUserError","setError","isSignedIn","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactReducer","devTools","process","persistor","persistStore","PrivateRoute","children","redirectTo","routeProps","isSignIn","useSelector","authSelectors","getIsSignIn","to","PublicRoute","restricted","shouldRedirect","useStyles","createUseStyles","link","display","textDecoration","marginRight","fontWeight","fontSize","color","activeLink","Navigation","style","exact","className","activeClassName","container","alignItems","fontStyle","marginLeft","borderRadius","border","padding","backgroundColor","UserMenu","dispath","useDispatch","getUsername","Button","type","onClick","authOperations","signOut","value","AuthNav","header","justifyContent","AppBar","HomePageView","lazy","RegistrationView","LoginFormView","PhoneContactsView","App","dispatch","useEffect","fetchCurrentUser","Container","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","fallback","path","ReactDOM","render","StrictMode","loading","document","getElementById","createAction","getUserEmail","getToken","getIsAuthLoading","getErrorMessage","getIsFetchingUser","isFetchingUser","axios","defaults","baseURL","headers","common","Authorization","registration","contactObj","a","post","data","toast","signIn","message","getState","persistedToken","get","props"],"mappings":"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","file":"static/js/main.f0da9f3f.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: '',\r\n    isLoading: false,\r\n    error: '',\r\n  },\r\n};\r\n\r\nconst items = createReducer(initialState.contacts.items, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(initialState.contacts.filter, {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(initialState.contacts.isLoading, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(initialState.contacts.error, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter, isLoading, error });\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isSignedIn: false,\r\n  error: null,\r\n  isAuthLoading: false,\r\n};\r\n\r\nconst user = createReducer(initialState.user, {\r\n  [authActions.registrationSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.signInSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.signOutSuccess]: () => initialState.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(initialState.token, {\r\n  [authActions.registrationSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.signInSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.signOutSuccess]: () => null,\r\n});\r\n\r\nconst isAuthLoading = createReducer(initialState.isAuthLoading, {\r\n  [authActions.registrationRequest]: () => true,\r\n  [authActions.registrationSuccess]: () => false,\r\n  [authActions.registrationError]: () => false,\r\n  [authActions.signInRequest]: () => true,\r\n  [authActions.signInSuccess]: () => false,\r\n  [authActions.signInError]: () => false,\r\n  [authActions.signOutRequest]: () => true,\r\n  [authActions.signOutSuccess]: () => false,\r\n  [authActions.signOutError]: () => false,\r\n  [authActions.getCurrentUserRequest]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(initialState.error, {\r\n  [authActions.registrationError]: setError,\r\n  [authActions.signInError]: setError,\r\n  [authActions.signOutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isSignedIn = createReducer(initialState.isSignedIn, {\r\n  [authActions.registrationSuccess]: () => true,\r\n  [authActions.signInSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registrationError]: () => false,\r\n  [authActions.signInError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.signOutSuccess]: () => false,\r\n});\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  isSignedIn,\r\n  error,\r\n  isAuthLoading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts/contacts-reducers';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isSignIn = useSelector(authSelectors.getIsSignIn);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isSignIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/contacts',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsSignIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport { createUseStyles } from 'react-jss';\r\nconst useStyles = createUseStyles({\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    marginRight: 15,\r\n    fontWeight: 700,\r\n    fontSize: 18,\r\n    color: '#DEB887',\r\n    '&:hover': {\r\n      color: '#FF4500',\r\n    },\r\n  },\r\n  activeLink: {\r\n    color: '#A52A2A',\r\n  },\r\n});\r\n\r\nconst Navigation = () => {\r\n  const isSignIn = useSelector(authSelectors.getIsSignIn);\r\n  const style = useStyles();\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        to=\"/\"\r\n        exact\r\n        className={style.link}\r\n        activeClassName={style.activeLink}\r\n      >\r\n        Home\r\n      </NavLink>\r\n      {isSignIn && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          className={style.link}\r\n          activeClassName={style.activeLink}\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authOperations from '../../redux/auth/auth-operation';\r\nimport Button from '../Button';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  name: {\r\n    marginRight: 12,\r\n    fontSize: 16,\r\n    fontWeight: 600,\r\n    fontStyle: 'italic',\r\n    color: '#DEB887',\r\n  },\r\n  link: {\r\n    display: 'inline-block',\r\n    marginLeft: 15,\r\n    borderRadius: 5,\r\n    border: '1px solid #A52A2A',\r\n    padding: 7,\r\n    fontWeight: 600,\r\n    color: '#fff',\r\n    backgroundColor: '#A52A2A',\r\n    '&:hover': {\r\n      color: '#A52A2A',\r\n      backgroundColor: '#fff',\r\n      border: '1px solid #A52A2A',\r\n    },\r\n  },\r\n});\r\n\r\nconst UserMenu = () => {\r\n  const style = useStyles();\r\n  const dispath = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n  return (\r\n    <div className={style.container}>\r\n      <span className={style.name}>Welcome, {name} </span>\r\n      <Button\r\n        type=\"button\"\r\n        onClick={() => dispath(authOperations.signOut())}\r\n        value=\"Sign Out\"\r\n        className={style.link}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import { NavLink } from 'react-router-dom';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  link: {\r\n    display: 'inline-block',\r\n    marginRight: 15,\r\n    textDecoration: 'none',\r\n    border: '1px solid #A52A2A',\r\n    borderRadius: 5,\r\n    padding: 7,\r\n    fontWeight: 600,\r\n    color: '#A52A2A',\r\n  },\r\n  activeLink: {\r\n    color: '#fff',\r\n    backgroundColor: '#A52A2A',\r\n  },\r\n});\r\n\r\nconst AuthNav = () => {\r\n  const style = useStyles();\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={style.link}\r\n        activeClassName={style.activeLink}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={style.link}\r\n        activeClassName={style.activeLink}\r\n      >\r\n        Sign In\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '15px 20px',\r\n    backgroundColor: '#FFF8DC',\r\n  },\r\n});\r\n\r\nconst AppBar = () => {\r\n  const isSignIn = useSelector(authSelectors.getIsSignIn);\r\n  const style = useStyles();\r\n  return (\r\n    <header className={style.header}>\r\n      <Navigation />\r\n      {isSignIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import { Redirect, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, Suspense, lazy } from 'react';\nimport Container from './components/Container';\nimport PrivateRoute from './components/Routes/PrivateRoute';\nimport { ToastContainer } from 'react-toastify';\nimport PublicRoute from './components/Routes/PublicRoute';\nimport authOperations from './redux/auth/auth-operation';\nimport AppBar from './components/PageHeader/AppBar';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst HomePageView = lazy(() => import('./views/HomePageView'));\nconst RegistrationView = lazy(() => import('./views/RegistrationView'));\nconst LoginFormView = lazy(() => import('./views/LoginFormView'));\nconst PhoneContactsView = lazy(() => import('./views/PhoneContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={3000}\n        hideProgressBar={true}\n        newestOnTop={false}\n        closeOnClick={true}\n      />\n      <AppBar />\n      <Switch>\n        <Suspense fallback={<h2>Loading....</h2>}>\n          <PublicRoute exact path=\"/\">\n            <HomePageView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/register\" restricted>\n            <RegistrationView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/login\" restricted>\n            <LoginFormView />\n          </PublicRoute>\n          <PrivateRoute exact path=\"/contacts\" redirectTo=\"/login\">\n            <PhoneContactsView />\n          </PrivateRoute>\n          <Redirect to=\"/login\" />\n        </Suspense>\n      </Switch>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { persistor, store } from './redux/store';\nimport App from './App';\n\nimport './base.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\n\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\n\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\n\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\n\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","const getIsSignIn = state => state.auth.isSignedIn;\r\nconst getUsername = state => state.auth.user.name;\r\nconst getUserEmail = state => state.auth.user.email;\r\nconst getToken = state => state.auth.token;\r\nconst getIsAuthLoading = state => state.auth.isAuthLoading;\r\nconst getErrorMessage = state => state.auth.error;\r\nconst getIsFetchingUser = state => state.auth.isFetchingUser;\r\n\r\nconst authSelectors = {\r\n  getIsSignIn,\r\n  getUsername,\r\n  getUserEmail,\r\n  getToken,\r\n  getIsAuthLoading,\r\n  getErrorMessage,\r\n  getIsFetchingUser,\r\n};\r\n\r\nexport default authSelectors;\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst BASE_URL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst registration = contactObj => async dispatch => {\r\n  dispatch(authActions.registrationRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/signup', contactObj);\r\n    token.set(data.token);\r\n    dispatch(authActions.registrationSuccess(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      authActions.registrationError(toast.error('Please enter correct data')),\r\n    );\r\n  }\r\n};\r\n\r\nconst signIn = contactObj => async dispatch => {\r\n  dispatch(authActions.signInRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/users/login', contactObj);\r\n    token.set(data.token);\r\n    dispatch(authActions.signInSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.signInError(toast.error('Please enter correct data')));\r\n  }\r\n};\r\n\r\nconst signOut = () => async dispatch => {\r\n  dispatch(authActions.signOutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.signOutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.signOutError(error.message));\r\n  }\r\n};\r\n\r\nconst fetchCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  try {\r\n    const { data } = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nconst authOperations = { registration, signIn, signOut, fetchCurrentUser };\r\n\r\nexport default authOperations;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registrationRequest = createAction('auth/registerRequest');\r\nconst registrationSuccess = createAction('auth/registerSuccess');\r\nconst registrationError = createAction('auth/registerError');\r\n\r\nconst signInRequest = createAction('auth/signInRequest');\r\nconst signInSuccess = createAction('auth/signInSuccess');\r\nconst signInError = createAction('auth/signInError');\r\n\r\nconst signOutRequest = createAction('auth/signOutRequest');\r\nconst signOutSuccess = createAction('auth/signOutSuccess');\r\nconst signOutError = createAction('auth/signOutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst authActions = {\r\n  registrationRequest,\r\n  registrationSuccess,\r\n  registrationError,\r\n  signInRequest,\r\n  signInSuccess,\r\n  signInError,\r\n  signOutRequest,\r\n  signOutSuccess,\r\n  signOutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n\r\nexport default authActions;\r\n","export { default } from './Button';\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ value, ...props }) => {\r\n  return <button {...props}>{value}</button>;\r\n};\r\nButton.propTypes = {\r\n  onclick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  value: PropTypes.string,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","const Container = ({ children, ...props }) => {\r\n  return <div {...props}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n"],"sourceRoot":""}