{"version":3,"sources":["components/FormComponents/FormContainer.jsx","views/RegistrationView.jsx"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","display","flexDirection","alignItems","marginBottom","FormContainer","children","props","style","className","component","maxWidth","yup","shape","login","required","email","password","RegistrationView","dispatch","useDispatch","initialValues","name","onSubmit","contactObj","resetForm","setSubmitting","authOperations","registration","TextField","type","label","variant","margin","value"],"mappings":"4LAGMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,aAAc,YAaHC,IATO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,4BAC1CC,EAAQb,IACd,OACE,cAAC,IAAD,yBAAWc,UAAWD,EAAMV,KAAMY,UAAU,OAAOC,SAAS,MAASJ,GAArE,aACGD,O,iCCjBP,8EAeeM,MAAaC,MAAM,CAChCC,MAAOF,MAAaG,SAAS,2BAC7BC,MAAOJ,MAEJI,MAAM,0BACND,SAAS,2BACZE,SAAUL,MAAaG,SAAS,gCA0DnBG,UAvDU,WACvB,IAAMC,EAAWC,cAajB,OACE,cAAC,IAAD,CACEC,cAAe,CAAEC,KAAM,GAAIN,MAAO,GAAIC,SAAU,IAEhDM,SAAU,cAA8D,IAdhDC,EAcXF,EAA0D,EAA1DA,KAAMN,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,SAAcQ,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAd3BF,EAeF,CAAEF,OAAMN,QAAOC,YAdvCE,EAASQ,IAAeC,aAAaJ,IAejCE,GAAc,GACdD,KANJ,SASE,eAAC,IAAD,WACE,cAAC,IAAD,CACEf,UAAWmB,IACXC,KAAK,OACLR,KAAK,OACLS,MAAM,QACNC,QAAQ,WACRC,OAAO,UAET,cAAC,IAAD,CACEvB,UAAWmB,IACXC,KAAK,QACLR,KAAK,QACLS,MAAM,QACNC,QAAQ,WACRC,OAAO,UAET,cAAC,IAAD,CACEvB,UAAWmB,IACXC,KAAK,WACLR,KAAK,WACLS,MAAM,WACNC,QAAQ,WACRC,OAAO,UAET,cAAC,IAAD,CAAQC,MAAM,KAAKJ,KAAK,SAASE,QAAQ","file":"static/js/9.0e24d124.chunk.js","sourcesContent":["import Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginBottom: 'auto',\r\n  },\r\n}));\r\n\r\nconst FormContainer = ({ children, ...props }) => {\r\n  const style = useStyles();\r\n  return (\r\n    <Container className={style.root} component=\"main\" maxWidth=\"xs\" {...props}>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","// import { useForm } from 'react-hook-form';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operation';\r\n\r\nimport FormContainer from '../components/FormComponents/FormContainer';\r\n\r\n// import MyForm from '../components/FormComponents/MyForm';\r\n// import FormField from '../components/FormComponents/FormField';\r\nimport Button from '../components/Button/Button';\r\n// import { yupResolver } from '@hookform/resolvers';\r\nimport * as yup from 'yup';\r\n// import authSelectors from '../redux/auth/auth-selectors';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst schema = yup.object().shape({\r\n  login: yup.string().required('Login field is required'),\r\n  email: yup\r\n    .string()\r\n    .email('Email should contain @')\r\n    .required('Email field is required'),\r\n  password: yup.string().required('Password field is required'),\r\n});\r\n\r\nconst RegistrationView = () => {\r\n  const dispatch = useDispatch();\r\n  // const isAuthLoading = useSelector(authSelectors.getIsAuthLoading);\r\n  // const errorMessage = useSelector(authSelectors.getErrorMessage);\r\n  const handleRegisterClick = contactObj =>\r\n    dispatch(authOperations.registration(contactObj));\r\n  // const { register, handleSubmit, errors } = useForm({\r\n  //   mode: 'onBlur',\r\n  //   resolver: yupResolver(schema),\r\n  // });\r\n\r\n  // const handleRegFormSubmit = contactObj => {\r\n  //   dispatch(authOperations.registration(contactObj));\r\n  // };\r\n  return (\r\n    <Formik\r\n      initialValues={{ name: '', email: '', password: '' }}\r\n      // validationSchema={schema}\r\n      onSubmit={({ name, email, password }, { resetForm, setSubmitting }) => {\r\n        handleRegisterClick({ name, email, password });\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      <Form>\r\n        <Field\r\n          component={TextField}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          label=\"Login\"\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n        />\r\n        <Field\r\n          component={TextField}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n        />\r\n        <Field\r\n          component={TextField}\r\n          type=\"password\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n        />\r\n        <Button value=\"Ok\" type=\"submit\" variant=\"contained\" />\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default RegistrationView;\r\n"],"sourceRoot":""}