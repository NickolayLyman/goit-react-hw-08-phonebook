{"version":3,"sources":["components/FormComponents/FormContainer.jsx","components/FormComponents/MyForm.jsx","components/FormComponents/FormField.jsx","views/LoginFormView.jsx"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","display","flexDirection","alignItems","marginBottom","FormContainer","children","props","style","className","component","maxWidth","width","MyForm","FormField","forwardRef","ref","variant","margin","inputRef","fullWidth","color","LoginFormView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleFormChange","target","name","value","onSubmit","event","preventDefault","authOperations","signIn","autoComplete","type","label","onChange"],"mappings":"4LAGMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,aAAc,YAaHC,IATO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,4BAC1CC,EAAQb,IACd,OACE,cAAC,IAAD,yBAAWc,UAAWD,EAAMV,KAAMY,UAAU,OAAOC,SAAS,MAASJ,GAArE,aACGD,O,oECfDX,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJc,MAAO,OACPb,UAAWF,EAAMG,QAAQ,QAcda,IAVA,SAAC,GAA4B,IAA1BP,EAAyB,EAAzBA,SAAaC,EAAY,4BACnCC,EAAQb,IAEd,OACE,8CAAMc,UAAWD,EAAMV,MAAUS,GAAjC,aACGD,O,oECXDQ,EAAYC,sBAAW,SAACR,EAAOS,GACnC,OACE,cAAC,IAAD,aACEC,QAAQ,WACRC,OAAO,SACPC,SAAUH,EACVI,WAAS,EACTC,MAAM,aACFd,OAKKO,O,qHC0CAQ,UAhDO,WACpB,IAAMC,EAAWC,cADS,EAEAC,mBAAS,IAFT,mBAEnBC,EAFmB,KAEZC,EAFY,OAGMF,mBAAS,IAHf,mBAGnBG,EAHmB,KAGTC,EAHS,KAKpBC,EAAmB,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAC1C,OAAQD,GACN,IAAK,QACHL,EAASM,GACT,MACF,IAAK,WACHJ,EAAYI,GACZ,MACF,QACE,SAWN,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAQC,SATa,SAAAC,GACvBA,EAAMC,iBACNb,EAASc,IAAeC,OAAO,CAAEZ,QAAOE,cACxCD,EAAS,IACTE,EAAY,KAK0BU,aAAa,MAAjD,UACE,cAAC,IAAD,CACEC,KAAK,QACLR,KAAK,QACLC,MAAOP,EACPe,MAAM,QACNC,SAAUZ,IAEZ,cAAC,IAAD,CACEU,KAAK,WACLR,KAAK,WACLC,MAAOL,EACPa,MAAM,WACNC,SAAUZ,IAEZ,cAAC,IAAD,CAAQG,MAAM","file":"static/js/7.600cc621.chunk.js","sourcesContent":["import Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginBottom: 'auto',\r\n  },\r\n}));\r\n\r\nconst FormContainer = ({ children, ...props }) => {\r\n  const style = useStyles();\r\n  return (\r\n    <Container className={style.root} component=\"main\" maxWidth=\"xs\" {...props}>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst MyForm = ({ children, ...props }) => {\r\n  const style = useStyles();\r\n\r\n  return (\r\n    <form className={style.root} {...props}>\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MyForm;\r\n","import { TextField } from '@material-ui/core';\r\nimport { forwardRef } from 'react';\r\n\r\nconst FormField = forwardRef((props, ref) => {\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      inputRef={ref}\r\n      fullWidth\r\n      color=\"secondary\"\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nexport default FormField;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operation';\r\n\r\nimport FormContainer from '../components/FormComponents/FormContainer';\r\n\r\nimport MyForm from '../components/FormComponents/MyForm';\r\nimport FormField from '../components/FormComponents/FormField';\r\nimport Button from '../components/Button/Button';\r\n\r\nconst LoginFormView = () => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleFormChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    dispatch(authOperations.signIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <MyForm onSubmit={handleFormSubmit} autoComplete=\"off\">\r\n        <FormField\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          label=\"Email\"\r\n          onChange={handleFormChange}\r\n        />\r\n        <FormField\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          label=\"Password\"\r\n          onChange={handleFormChange}\r\n        />\r\n        <Button value=\"Sign In\" />\r\n      </MyForm>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginFormView;\r\n"],"sourceRoot":""}